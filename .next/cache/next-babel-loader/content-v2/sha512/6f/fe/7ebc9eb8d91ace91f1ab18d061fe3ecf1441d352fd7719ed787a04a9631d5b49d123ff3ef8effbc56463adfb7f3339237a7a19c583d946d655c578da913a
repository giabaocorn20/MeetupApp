{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jabao_pay_lak/Desktop/MeetupApp/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    src: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 8\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/jabao_pay_lak/Desktop/MeetupApp/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACG,QAAC,YAAD;AACK,IAAA,GAAG,EAAGA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEK,IAAA,KAAK,EAAGF,KAAK,CAACC,UAAN,CAAiBE,KAF9B;AAGK,IAAA,OAAO,EAAGH,KAAK,CAACC,UAAN,CAAiBG,OAHhC;AAIK,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJnC;AAAA;AAAA;AAAA;AAAA,UADH;AAQH;;KATQN,a;;AA2DT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\"\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\n\nfunction MeetupDetails(props) { \n    return ( \n       <MeetupDetail \n            src= {props.meetupData.image}\n            title= {props.meetupData.title}\n            address= {props.meetupData.address} \n            description={props.meetupData.description}\n        />\n    )\n}\nexport async function getStaticPaths() {\n\n    const client = await MongoClient.connect('mongodb+srv://giabaocorn20:12062003aA@cluster0.wtrw3.mongodb.net/meetups?retryWrites=true&w=majority');\n        \n    const db = client.db();\n    \n    const meetupsCollection = db.collection(\"meetups\");\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\n\n    client.close()\n    \n    return {\n            fallback: false,\n            paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))    \n        }\n}\n\nexport async function getStaticProps(context) {\n    // fetch data for a single meetup\n  \n    const meetupId = context.params.meetupId;\n  \n    const client = await MongoClient.connect(\n      'mongodb+srv://giabaocorn20:12062003aA@cluster0.wtrw3.mongodb.net/meetups?retryWrites=true&w=majority'\n    );\n    const db = client.db();\n  \n    const meetupsCollection = db.collection('meetups');\n  \n    const selectedMeetup = await meetupsCollection.findOne({\n      _id: ObjectId(meetupId), //convert id to ObjectId\n    });\n  \n    client.close();\n  \n    return {\n      props: {\n        meetupData: {\n            id: selectedMeetup._id.toString(), //convert back to string \n            title: selectedMeetup.title,\n            address: selectedMeetup.address,\n            image: selectedMeetup.image,\n            description: selectedMeetup.description,\n        }\n      },\n    };\n  }\n\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}