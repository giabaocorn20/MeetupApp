{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jabao_pay_lak/Desktop/MeetupApp/pages/[meetupId]/index.js\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Meetup detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      src: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/jabao_pay_lak/Desktop/MeetupApp/pages/[meetupId]/index.js"],"names":["Head","Fragment","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,QAAA,IAAI,EAAG,aADP;AAEA,QAAA,OAAO,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,YAAD;AACQ,MAAA,GAAG,EAAGA,KAAK,CAACC,UAAN,CAAiBC,KAD/B;AAEQ,MAAA,KAAK,EAAGF,KAAK,CAACC,UAAN,CAAiBE,KAFjC;AAGQ,MAAA,OAAO,EAAGH,KAAK,CAACC,UAAN,CAAiBG,OAHnC;AAIQ,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJtC;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;KAjBQN,a;;AAmET,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\"\nimport Head from \"next/head\";\nimport { Fragment } from \"react/cjs/react.production.min\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\n\nfunction MeetupDetails(props) { \n    return ( \n        <Fragment>\n            <Head>\n                <title>Meetup detail</title>\n                <meta\n                name = 'description'\n                content=\"detail\"/>\n            </Head>\n            <MeetupDetail \n                    src= {props.meetupData.image}\n                    title= {props.meetupData.title}\n                    address= {props.meetupData.address} \n                    description={props.meetupData.description}\n                />\n        </Fragment>\n    )\n}\nexport async function getStaticPaths() {\n\n    const client = await MongoClient.connect('mongodb+srv://giabaocorn20:12062003aA@cluster0.wtrw3.mongodb.net/meetups?retryWrites=true&w=majority');\n        \n    const db = client.db();\n    \n    const meetupsCollection = db.collection(\"meetups\");\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\n\n    client.close()\n    \n    return {\n            fallback: false,\n            paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))    \n        }\n}\n\nexport async function getStaticProps(context) {\n    // fetch data for a single meetup\n  \n    const meetupId = context.params.meetupId;\n  \n    const client = await MongoClient.connect(\n      'mongodb+srv://giabaocorn20:12062003aA@cluster0.wtrw3.mongodb.net/meetups?retryWrites=true&w=majority'\n    );\n    const db = client.db();\n  \n    const meetupsCollection = db.collection('meetups');\n  \n    const selectedMeetup = await meetupsCollection.findOne({\n      _id: ObjectId(meetupId), //convert id to ObjectId\n    });\n  \n    client.close();\n  \n    return {\n      props: {\n        meetupData: {\n            id: selectedMeetup._id.toString(), //convert back to string\n            title: selectedMeetup.title,\n            address: selectedMeetup.address,\n            image: selectedMeetup.image,\n            description: selectedMeetup.description,\n        }\n      },\n    };\n  }\n\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}