{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jabao_pay_lak/Desktop/MeetupApp/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    src: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 8\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://giabaocorn20:12062003aA@cluster0.wtrw3.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://giabaocorn20:12062003aA@cluster0.wtrw3.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId) //convert id to ObjectId\n\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        //convert back to string\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/jabao_pay_lak/Desktop/MeetupApp/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACG,QAAC,YAAD;AACK,IAAA,GAAG,EAAGA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEK,IAAA,KAAK,EAAGF,KAAK,CAACC,UAAN,CAAiBE,KAF9B;AAGK,IAAA,OAAO,EAAGH,KAAK,CAACC,UAAN,CAAiBG,OAHhC;AAIK,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJnC;AAAA;AAAA;AAAA;AAAA,UADH;AAQH;;AACD,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,sGAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACCC,IAAAA,QAAQ,EAAE,KADX;AAECC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AAAT,KAAL,CAAlB;AAFR,GAAP;AAIH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACrDb,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD,CADwC,CAC5B;;AAD4B,GAA1B,CAA7B;AAIAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACR2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADI;AAC2B;AACnCpB,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAFd;AAGRC,QAAAA,OAAO,EAAEsB,cAAc,CAACtB,OAHhB;AAIRF,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAJd;AAKRG,QAAAA,WAAW,EAAEqB,cAAc,CAACrB;AALpB;AADP;AADF,GAAP;AAWD;AAEH,eAAeN,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\"\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\n\nfunction MeetupDetails(props) { \n    return ( \n       <MeetupDetail \n            src= {props.meetupData.image}\n            title= {props.meetupData.title}\n            address= {props.meetupData.address} \n            description={props.meetupData.description}\n        />\n    )\n}\nexport async function getStaticPaths() {\n\n    const client = await MongoClient.connect('mongodb+srv://giabaocorn20:12062003aA@cluster0.wtrw3.mongodb.net/meetups?retryWrites=true&w=majority');\n        \n    const db = client.db();\n    \n    const meetupsCollection = db.collection(\"meetups\");\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\n\n    client.close()\n    \n    return {\n            fallback: false,\n            paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))    \n        }\n}\n\nexport async function getStaticProps(context) {\n    // fetch data for a single meetup\n  \n    const meetupId = context.params.meetupId;\n  \n    const client = await MongoClient.connect(\n      'mongodb+srv://giabaocorn20:12062003aA@cluster0.wtrw3.mongodb.net/meetups?retryWrites=true&w=majority'\n    );\n    const db = client.db();\n  \n    const meetupsCollection = db.collection('meetups');\n  \n    const selectedMeetup = await meetupsCollection.findOne({\n      _id: ObjectId(meetupId), //convert id to ObjectId\n    });\n  \n    client.close();\n  \n    return {\n      props: {\n        meetupData: {\n            id: selectedMeetup._id.toString(), //convert back to string\n            title: selectedMeetup.title,\n            address: selectedMeetup.address,\n            image: selectedMeetup.image,\n            description: selectedMeetup.description,\n        }\n      },\n    };\n  }\n\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}